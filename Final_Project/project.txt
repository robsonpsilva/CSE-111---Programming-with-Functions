CSE 111 Proposal for a Student Chosen Program

    (This is a proposal. All proposals are written with our best
    knowledge at the beginning of a project. As we progress from the
    beginning to the end of a project, we gain more knowledge, and we
    change some of our proposed ideas. This is part of completing any
    project and is fine.  However, we still must write a proposal so
    that our teachers or supervisors know what we intend to do. Please
    answer each of the following questions to the best of your
    knowledge.)

1. What is the title of your program?

Pegasus - Store Front and Stock Management

2. What real-world problem will your program address or help to solve?

One of the challenges in the real world is recording sales, controlling 
inventory and generating reports that make it easier to track sales status
and inventory. 
The objective of the program is to support retailers in recording customer
purchases, issuing receipts and updating inventory.

3. What will you learn from developing this program?

I will learn how to input and output data via keyboard and file, 
error handling, mathematical processing of values, table manipulation
and displaying output data in a formatted and elegant report.

4. What Python modules will your program use?

I will use at least the following modules: csv, datetime, math,
tabular and pytest.



5. List the names of functions you will need?

    (Remember that the most reusable functions don't get user input and
    don't print results but instead have parameters and return a result.
    Functions that get user input and print results are important and do
    useful work but are not easily reusable.)

    (Remember also that it's hard to test functions that get user input
    and print results. It's easy to test functions that don't get user
    input and don't print results but instead have parameters and return
    a result. Therefore, you should write most of your program functions
    to have parameters and return a result.)

    main()

    read_stock_data()
    insert_stock_item(item_id, item_name, item_price)
    update_stock_item(item_id, item_name, item_price)
    delete_stock_item(item_id)

    save_request_file(filename)
    load_request_file(filename)



6. List the names of the test functions you will write.

    test_read_stock_data()
    test_insert_stock_item(item_id, item_name, item_price)
    test_update_stock_item(item_id, item_name, item_price)
    test_delete_stock_item(item_id)

    test_save_request_file(filename)
    test_load_request_file(filename)